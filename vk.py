import vk_api, requests, re, time, json, os, shutil, subprocess, sys
from vk_api.longpoll import VkLongPoll, VkEventType
from vktools import Carousel, Element, Text, ButtonColor, OpenLink, Keyboard
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard
import shutil
import os, main
from sys import platform
from requests.adapters import HTTPAdapter

def write_msg(user_id, message):
    vk.method('messages.send', {'user_id': user_id, 'message': message})

# API-–∫–ª—é—á —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ
token = "72271767a6da89d5b1d037f45982439eb0ccbd5264f784156fbc8d1a9d9a9159940481fb54ebe4440f9fa"

# –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
vk = vk_api.VkApi(token=token)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard2 = Keyboard(
    [
        [
            Text("–í—ã–≤–æ–¥"),
            Text("–ë–∞–ª–∞–Ω—Å", ButtonColor.PRIMARY)
        ],
        [
            OpenLink("üï∏Ô∏è–°–∞–π—Ç", "https://internetopros.ru/private")
        ]
    ]
)

# –†–∞–±–æ—Ç–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
longpoll = VkLongPoll(vk)

def programmCall(file, id): # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–º, –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é cmd
    print('–ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª')
    if platform == "win32":
        print('–í–∏–Ω–¥–∞')
        subprocess.Popen(['python', file, id, 'argzzz2'])
    elif platform == "linux" or platform == "linux2":
        subprocess.Popen(['python3', f'/home/ubuntu/BotAPI/{file}', id, 'argzzz2'])

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def sender(id, text, keyboard=keyboard2.add_keyboard(), template=None, att=None):
    vk.method('messages.send', {'chat_id' : id, 'message' : text, 'keyboard' : keyboard, 'template' : template, 'random_id' : 0, 'attachment': att})

# –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –õ–°
def sender_private_msg(id, text, keyboard=keyboard2.add_keyboard(), template=None, att=None):
    vk.method('messages.send', {'user_id' : id, 'message' : text, 'keyboard' : keyboard, 'template' : template, 'random_id' : 0, 'attachment': att})

# –ø–æ–∏—Å–∫ —Å–∏–º–≤–æ–ª–∞ –≤ —Å–ø–∏—Å–∫–µ
def find_letter(letter, lst):
    return any(letter in word for word in lst)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while True:
    try:
        print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
        for event in longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW:
                msg = event.text
                if event.from_chat:
                    id = event.chat_id
                    print('–≤ —á–∞—Ç');
                    
                    if '@agent' in msg:
                        msg = msg.partition(' ')[2]
                    print('–°–æ–æ–±—â–µ–Ω–∏–µ: ', msg)
                    if msg == '–±–∞–ª–∞–Ω—Å':

                        keyboard = VkKeyboard(inline=True)
                        keyboard.add_button(label = f"–û–∫")

                        sender(id,  ''.join("–î–∞?"), keyboard=keyboard.get_keyboard())
                    
                    elif msg == "–∫–∞—Ä—É—Å–µ–ª—å":

                        carousel = {
                            "type": "carousel",
                            "elements": [{
                                    "photo_id": "-206674494_457239035",
                                    "title": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "–ø–Ω",
                                            "payload": "{}"
                                        }
                                    }]
                                },
                                {
                                    "photo_id": "-206674494_457239034",
                                    "title": "–í—Ç–æ—Ä–Ω–∏–∫",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "–≤—Ç",
                                            "payload": "{}"
                                        }
                                    }]
                                },
                                {
                                    "photo_id": "-206674494_457239037",
                                    "title": "–°—Ä–µ–¥–∞",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "—Å—Ä",
                                            "payload": "{}"
                                        }
                                    }]
                                },
                                {
                                    "photo_id": "-206674494_457239039",
                                    "title": "–ß–µ—Ç–≤–µ—Ä–≥",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "—á—Ç",
                                            "payload": "{}"
                                        }
                                    }]
                                },
                                {
                                    "photo_id": "-206674494_457239036",
                                    "title": "–ü—è—Ç–Ω–∏—Ü–∞",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "–ø—Ç",
                                            "payload": "{}"
                                        }
                                    }]
                                },
                                {
                                    "photo_id": "-206674494_457239038",
                                    "title": "–°—É–±–±–æ—Ç–∞",
                                    "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É",
                                    "action": {
                                        "type": "open_photo"
                                    },
                                    "buttons": [{
                                        "action": {
                                            "type": "text",
                                            "label": "—Å–±",
                                            "payload": "{}"
                                        }
                                    }]
                                }
                            ]
                        }
                        carousel = json.dumps(carousel, ensure_ascii=False).encode('utf-8')
                        carousel = str(carousel.decode('utf-8'))

                        sender(id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', keyboard=None, template=carousel)

                elif event.from_user:
                    id = event.user_id
                    
                    
                    if msg.lower() == '–±–∞–ª–∞–Ω—Å':
                        keyboard = VkKeyboard(inline=True)
                        keyboard.add_button(label = f"–û–∫")

                        sessions = next(os.walk('sessions/'), (None, None, []))[2]

                        if find_letter(str(id), sessions) == True:
                            print('–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞')
                            balance = main.get_balance(str(id))
                            sender_private_msg(id,  ''.join(balance) + ' —Ä—É–±') #, keyboard=keyboard.get_keyboard()
                        else:
                            sender_private_msg(id,  '–í–∞—à–∞ —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
                        
                    if msg.lower() == '/start':
                        print('–°—Ç–∞—Ä—Ç')
                        # –°–æ–≤–µ—Ç—É—é –∑–¥–µ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, —á—Ç–æ–±—ã –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è,
                        # –ü–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–Ω–µ—Å—Ç–∏ –µ–≥–æ –≤ –∏–≥–Ω–æ—Ä –ª–∏—Å—Ç
                        file = f'login_{id}.py' # –§–∞–π–ª –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
                        print('–§–∞–π–ª –∏–Ω–¥–∏–≤–∏–¥', file)
                        shutil.copyfile('login_example.py', file) # –ö–æ–ø–∏—Ä—É–µ–º –æ–±—Ä–∞–∑–µ—Ü –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏–º –≤ —Ñ–∞–π–ª –∏–Ω–¥–∏–≤–∏–¥. —Ä–∞–±–æ—Ç—ã
                        sender_private_msg(id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! (–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ—Ç–≤–æ–¥–∏—Ç—Å—è 1 –º–∏–Ω—É—Ç–∞)\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ª–æ–≥–∏–Ω:–ø–∞—Ä–æ–ª—å')	
                        programmCall(file, str(id)) # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª –∏–Ω–¥–∏–≤–∏–¥. —Ä–∞–±–æ—Ç—ã
                        time.sleep(60) # –û–∂–∏–¥–∞–Ω–∏–µ, —á—Ç–æ–±—ã —É—Å–ø–µ–ª–æ –ø–æ–ª—É—á–∏—Ç—å id
                        print('–í—Ä–µ–º—è –≤—ã—à–ª–æ')
                        #os.remove('now id') # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–¥–∞—á–∏ id, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, –∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ —É–¥–∞–ª–∏—Ç—å, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ, –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞

                        sessions = next(os.walk('sessions/'), (None, None, []))[2]

                        if find_letter(str(id), sessions) == True:
                            sender_private_msg(id, '–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!')

                    if msg.lower() == '/run':
                        main.run(str(id))
                        

                        

                        
                   
    except:
        time.sleep(60)
        pass